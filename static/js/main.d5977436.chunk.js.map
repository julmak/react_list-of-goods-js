{"version":3,"sources":["components/GoodItem/GoodItem.jsx","components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodItem","good","GoodList","goods","map","goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isRevesed","setIsRevesed","sortedGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","showResetButton","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"iPACaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SCEpBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,sBAClBC,EAAoB,iBAwBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAxBR,SAA0BX,EAAOO,EAAWE,GAC1C,IAAMG,EAAa,YAAOZ,GAiB1B,OAfIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRR,EAAYG,EAAcM,UAAYN,EAMzBO,CAAiBjB,EAAiBK,EAAWE,GAQ3DW,IAAoBb,GAAaE,EAEvC,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYjB,IAAcJ,IALhC,SAQGA,IAGH,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYjB,IAAcH,IALhC,SAQGA,IAGH,wBACEkB,QAlCc,kBAAMZ,GAAcD,IAmClCc,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,YAAaf,IALnB,SA7DmB,YAwElBW,GACC,wBACEG,KAAK,SACLF,UAAU,4BACVC,QA/CU,WAClBd,EAAa,IACbE,GAAa,IA0CP,sBAYJ,cAAC,EAAD,CAAUV,MAAOW,QCxGvBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d5977436.chunk.js","sourcesContent":["\nexport const GoodItem = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { GoodItem } from '../GoodItem/GoodItem';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodItem good={good} key={good} />\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './components/GoodList/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'Sort alphabetically';\nconst SORT_FIELD_LENGTH = 'Sort by length';\nconst SORT_FIELD_REVERSE = 'Reverse';\n\nfunction getPreparedGoods(goods, sortField, isRevesed) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isRevesed ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isRevesed, setIsRevesed] = useState(false);\n  const sortedGoods = getPreparedGoods(goodsFromServer, sortField, isRevesed);\n\n  const handleReverse = () => setIsRevesed(!isRevesed);\n  const handleReset = () => {\n    setSortField('');\n    setIsRevesed(false);\n  };\n\n  const showResetButton = !!sortField || isRevesed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SORT_FIELD_NAME },\n          )}\n        >\n          {SORT_FIELD_NAME}\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n        >\n          {SORT_FIELD_LENGTH}\n        </button>\n\n        <button\n          onClick={handleReverse}\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isRevesed },\n          )}\n        >\n          {SORT_FIELD_REVERSE}\n        </button>\n\n        {showResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )\n        }\n\n      </div>\n\n      <GoodList goods={sortedGoods} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}